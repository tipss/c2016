Cisco ACI: Application Centric Infra

ofdatapath: the switch implementation
ofprotocol: secure channel for connecting the switch to the controller
oflib: a library for converting to/from 1.3 wire format
dpctl: a tool for configuring the switch from the console


NF and YANG are not SDN but they can be used in a SDN environment.  
They came about because someone realised that no-one was using the ‘SET’ element of SNMP.  
NETCONF is a management protocol and YANG is a device model, a SDN or an
Orchestration platform can sit on top and use these but does not have to.

YANG models are supposed to be human readable and NetCONF/YANG interactions 
are supposed to meet a range of criteria to provide safe provisioning, 
with lock, unlock, commit and rollback functionality.  SNMP MIBs can be deployed as part of
the YANG build, tail-f offer all sorts of useful tools to integrate YANG, SNMP and CLI.

How EVPN is different from VPLS ?.
In EVPN PE's learn and advertise MAC addresses using MP-BGP in control plane using BGP updates
with newly defined NLRI, like VPN IPV4 routes. no pseudo-wire full mesh required.
(because broadcast/flood domains are not needed, this is done in control plane of MP-BGP),
L2 Traffic is sent over a specific PE tunnel after learning is done.
 
This is not the case for VPLS. Where in VPLS establishes virtual broadcast domain,
MAC addreses are not seen by BGP control plane in VPLS.

Why we do not need to run STP in VPLS Bridge ?.
Each PE has a P2MP view of all other PEs it sees itself as a root bridge, split horizon
loop protection. Full mesh topology obviates STP requirements in the service provider network
Customer STP is transparent to the SP / customer BPDUs are forwarded transparently
Traffic received from the network will not be forwarded back to the network

How STP works?
STP is a Layer 2 protocol that passes data back and forth to find out how the switches are organized
on the network and then takes all the information it gathers and uses it to create a logical tree.
Part of the information STP receives defines exactly how all the network switches are interconnected.

STP builds this information by sending out network packets called Bridge Protocol Data Units
(BPDUs or sometimes BDUs). These BPDUs — or rather the data in them —
control the way STP determines the network topology.

Every participating sends out STP BPDU , with Bridge ID/priority. Root Bridge will be the one
with lowest priroty(or MAC address).
Each swich will find lowest cost port to reach RootBridge(least number of hops based on the Tree).
and this port is called Root Port. Cost is calculated based on the Interface-Type.

Designated Port?.
Rest of the ports are made blocking ports(meaning flood traffice and data traffic
will not be sent or received), but they still can receive BPDU's

How to detect loops ?.
Find which port is dropping most packets.
And findout from all the switches that they have only one Root Bridge. If not, or if they 
flip-flop find why Root-Bridge is not Txing BPDU in time.

VxLAN vs VPLS
================================================================================================================
You can think of VPLS as Layer 2 over an MPLS network with MAC address learning. 
Like VXLAN, VPLS can do things like VLAN translation. However, VPLS is not a true overlay network like VXLAN. 
What this means is that it will still operate at layer 2 only, which means you're still going to be limited 
to 4096 VLAN's in a bridge domain. VXLAN, on the other hand, can support up to 16 million VLAN's in an overlay, 
which is important if you have scalability concerns. Additionally, because VXLAN is an overlay, it can be 
managed independently. For example, your network team may manage the underlying layer 2 and layer 3 networks, 
while your virtual infrastructure teams manage the overlay. And as you mentioned, VXLAN is typically 
implemented and managed in software. However, connecting an overlay network to a traditional network is still 
a problem and requires a gateway that bridges the two. There are now quite a few options to run VXLAN 
in hardware for this purpose.

VXLAN encapsulates L2 into L3 using UDP. Once that is done, it's just IP, do what you want with including 
stuffing it into a VPLS. That does not mean you should simply use VxLAN in the WAN. Things like optimizimg
 broadcast/multicast, MAC learning, and so on still have to be dealt with.

In VxLAN
 A tenant identifier, the VXLAN Network Identifier (VNI), is encoded in the VXLAN
header and allows each tenant to have an isolated Layer 2 domain.

• VXLAN supports multi-pathing scalability through ECMP. VXLAN uses the outer source
UDP port as an entropy field that can be used by the core IP routers to balance the load
across different paths.

ECMP is not available in VPLS.
ARP flooding protection is not available in VPLS		

EVPN:
EVPN is an IETF technology (draft-ietf-l2vpn-evpn) that uses a new BGP address family which
allows VPLS services to be operated in a similar way to IP-VPNs, where the MAC addresses, IP
addresses and the information to set up the flooding tree are distributed by BGP. While EVPN can
be used as the control plane for different data plane encapsulations, only VXLAN is supported in
SR OS in the release tested. 
==============================================================================================================
VPLS Notes:(RFC4761)
VPLS needs an 
How VLAN traffic is segrigated ?.
Each VLAN has its own VPLS instance.
A VLAN has its own broadcast space,and MAC address space.

Note: Discovery of VE's is done using newly defined BGP NLRI.
Once this is done, all flooding/learning will only be sent to 
participating PE's from the source PE. Route Target is used to distinguish each VPLS-Instance

Role of BGP here is to only Discover participating VPLS' VE(or VID).
Having fully meshed PE MPLS bi-directional pseudo-wire is  basic 
requirement(LDP can be used for this also) for VPLS to work, 
And these tunnels are setup not using BGP. These tunnels can also be GRE

When a PE capable of flooding (say PEx) receives a broadcast Ethernet
   frame, or one with an unknown destination MAC address, it must flood
   the frame.  If the frame arrived from an attached CE, PEx must send a
   copy of the frame to every other attached CE, as well as to all other
   PEs participating in the VPLS.  If, on the other hand, the frame
   arrived from another PE (say PEy), PEx must send a copy of the packet
   only to attached CEs.  PEx MUST NOT send the frame to other PEs,
   since PEy would have already done so.  This notion has been termed
   "split horizon" forwarding and is a consequence of the PEs being
   logically fully meshed for VPLS.

   Split horizon forwarding rules apply to broadcast and multicast
   packets, as well as packets to an unknown MAC address.

 MAC Address Learning

   As was mentioned earlier, the key distinguishing feature of VPLS is
   that it is a multipoint service.  This means that the entire Service
   Provider network should appear as a single logical learning bridge
   for each VPLS that the SP network supports.  The logical ports for
   the SP "bridge" are the customer ports as well as the pseudowires on
   a VE.  Just as a learning bridge learns MAC addresses on its ports,
   the SP bridge must learn MAC addresses at its VEs.


   Learning consists of associating source MAC addresses of packets with
   the (logical) ports on which they arrive; this association is the
   Forwarding Information Base (FIB).  The FIB is used for forwarding
   packets.  For example, suppose the bridge receives a packet with
   source MAC address S on (logical) port P.  If subsequently, the
   bridge receives a packet with destination MAC address S, it knows
   that it should send the packet out on port P.

   If a VE learns a source MAC address S on logical port P, then later
   sees S on a different port P', then the VE MUST update its FIB to
   reflect the new port P'.  A VE MAY implement a mechanism to damp
   flapping of source ports for a given MAC address.

VPLS PEs SHOULD have an aging mechanism to remove a MAC address
   associated with a logical port, much the same as learning bridges do.
   This is required so that a MAC address can be relearned if it "moves"
   from a logical port to another logical port, either because the
   station to which that MAC address belongs really has moved or because
   of a topology change in the LAN that causes this MAC address to
   arrive on a new port.  In addition, aging reduces the size of a VPLS
   MAC table to just the active MAC addresses, rather than all MAC
   addresses in that VPLS.

   The "age" of a source MAC address S on a logical port P is the time
   since it was last seen as a source MAC on port P.  If the age exceeds
   the aging time T, S MUST be flushed from the FIB.  This of course
   means that every time S is seen as a source MAC address on port P,
   S's age is reset.

   An implementation SHOULD provide a configurable knob to set the aging
   time T on a per-VPLS basis.  In addition, an implementation MAY
   accelerate aging of all MAC addresses in a VPLS if it detects certain
   situations, such as a Spanning Tree topology change in that VPLS.

OpenFlow Messages:

Controller-To-Switch( Barrier, FeatureRequest, Pkt-Out, 
Flow-Mod(Modify-State),ReadState(collect config, stats etc from switch)
Role-Request(request role of the open-flow-channel)

Asynchronous Message:(from switch to controller)
Pkt-In (swith sends to controller)
Flow-Removed
Port Status
Error

Symmetric:
Hello, Echo

Content of Openflow Table:

MPC-ATC
MatchField, Priority, Counters, Actions Timeouts Cookies(Opaque data)
More details on open flow processing:
http://searchsdn.techtarget.com/feature/OpenFlow-protocol-primer-Looking-under-the-hood
